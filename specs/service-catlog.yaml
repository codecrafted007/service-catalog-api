swagger: "2.0"
info:
  version: "1.0.0"
  title: Service Catalog API
  description: A simple REST API to manage services and their versions
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key

paths:
  /services:
    get:
      summary: List services
      description: Returns a list of services, with optional filtering, pagination, and sorting
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          description: Filter services by name (partial match)
        - name: sort
          in: query
          required: false
          type: string
          enum: [name, created_at]
          description: Sort by name or created_at
        - name: page
          in: query
          required: false
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          type: integer
          default: 10
          minimum: 1
          maximum: 100
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: List of services
          schema:
            allOf:
              - $ref: "#/definitions/Response"
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/definitions/Service"

    post:
      summary: Create a new service
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ServiceInput"
      responses:
        200:
          description: Service created
          schema:
            allOf:
              - $ref: "#/definitions/Response"
              - type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer

  /services/{id}:
    get:
      summary: Get service by ID
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Service found
          schema:
            allOf:
              - $ref: "#/definitions/Response"
              - type: object
                properties:
                  data:
                    $ref: "#/definitions/Service"
        404:
          description: Service not found
          schema:
            allOf:
              - $ref: "#/definitions/Response"
              - type: object
                properties:
                  data:
                    type: object
                    nullable: true
                  error:
                    type: string
                    example: "Service not found"

    put:
      summary: Update service
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ServiceInput"
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Service updated successfully
          schema:
            $ref: "#/definitions/Response"

        404:
          description: Service not found
          schema:
            allOf:
              - $ref: "#/definitions/Response"
              - type: object
                properties:
                  data:
                    type: object
                    nullable: true
                  error:
                    type: string
                    example: "Service not found"

    delete:
      summary: Delete service
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Service deleted
          schema:
            $ref: "#/definitions/Response"

definitions:
  Response:
    type: object
    properties:
      code:
        type: integer
      data:
        type: object
      error:
        type: string
      success:
        type: boolean
  Service:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      created_at:
        type: string
        format: date-time

  ServiceInput:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      description:
        type: string

  VersionInput:
    type: object
    required:
      - version
    properties:
      version:
        type: string
